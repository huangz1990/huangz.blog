使用 Redis 列表构建分页程序
================================

.. note::

    本文摘录自即将出版的《Redis使用手册》，
    详情请见： `RedisGuide.com <http://RedisGuide.com>`_ 。

对于互联网上每一个具有一定规模的网站来说，
分页程序都是必不可少的：
新闻站点、博客、论坛、搜索引擎等等，
都会使用分页程序将数量众多的信息分割为多个页面，
使得用户可以以页为单位浏览网站提供的信息，
并以此来控制网站每次取出的信息数量。
图 4-19 就展示了一个使用分页程序对用户发表的论坛主题进行分割的例子。

----

图 4-19 论坛中的分页示例

.. image:: image/IMAGE_V2EX_PAGING.png

----

代码清单 4-2 展示了一个使用列表实现分页程序的方法，
这个程序可以将给定的元素有序地放入到一个列表里面，
然后使用 ``LRANGE`` 命令从列表中取出指定数量的元素，
从而实现分页这一概念。

----

代码清单 4-2 使用列表实现的分页程序：\ ``/list/paging.py``

.. literalinclude:: code/paging.py

----

作为例子，
我们可以通过执行以下代码，
载入并创建出一个针对用户帖子的分页对象：

::

    >>> from redis import Redis
    >>> from paging import Paging
    >>> client = Redis(decode_responses=True)
    >>> topics = Paging(client, "user-topics")

并使用数字 ``1`` 至 ``19`` 作为用户帖子的 ID ，
将它们添加到分页列表里面：

::

    >>> for i in range(1, 20):
    ...   topics.add(i)
    ...

然后我们就可以使用分页程序，
对这些帖子进行分页了：

::

    >>> topics.get_page(1, 5)   # 以每页 5 个帖子的方式，取出第 1 页的帖子
    ['19', '18', '17', '16', '15']
    >>> topics.get_page(2, 5)   # 以每页 5 个帖子的方式，取出第 2 页的帖子
    ['14', '13', '12', '11', '10']
    >>> topics.get_page(1, 10)  # 以每页 10 个帖子的方式，取出第 1 页的帖子
    ['19', '18', '17', '16', '15', '14', '13', '12', '11', '10']

最后，
我们可以通过执行以下代码，
取得分页列表目前包含的元素数量：

::

    >>> topics.size()
    19


