使用 Go 语言生成伪随机数
==============================

.. note::

    本文摘录自《Go语言趣学指南》第 2 章，
    请访问 `gpwgcn.com <http://gpwgcn.com>`_  以获取更多相关信息。

    .. image:: image/gpwgcn.jpg
       :scale: 80%

让人类随意想出一个介于 1 至 10 之间的数字是非常容易的，但如果我们想要让
Go 来完成同样的事情，那么就需要用到 ``rand`` 包来生成伪随机数。
这些数字之所以被称为伪随机数，是因为它们并非真正随机，只是看上去像是随机的而已。

代码清单 2-6 中的代码会打印出两个介于 1 至 10 之间的数字。
这个程序会先向 ``Intn`` 函数传入数字 ``10`` 以获得一个介于 0 至 9
之间的伪随机数，然后把这个数字加一并将其结果赋值给变量 ``num`` 。
因为常量无法使用函数调用的结果作为值，所以 ``num``
被声明成了变量而不是常量。

   {注意}

   如果我们在写代码的时候忘记对伪随机数执行加一操作，
   那么程序将返回一个介于 0 至 9 的数字而不是我们想要的介于 1 至 10
   的数字。 这是典型的计算机编程错误差一错误（off-by-one
   error）的其中一个例子。

   这种错误是典型的计算机编程错误之一。

--------------

代码清单 2-6 随机数字： ``rand.go``

.. code-block:: go

    package main

    import (
        "fmt"
        "math/rand"
    )

    func main() {
        var num = rand.Intn(10) + 1
        fmt.Println(num)

        num = rand.Intn(10) + 1
        fmt.Println(num)
    }

--------------

虽然 ``rand`` 包的\ *导入路径*\ 为 ``math/rand`` ，但是我们在调用
``Intn`` 函数的时候只需要使用包名 ``rand``
作为前缀即可，不需要使用整个导入路径。
